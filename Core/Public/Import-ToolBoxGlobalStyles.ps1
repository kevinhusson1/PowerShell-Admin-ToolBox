<#
.SYNOPSIS
    Chargeur de styles globaux pour PowerShell Admin ToolBox

.DESCRIPTION
    Fournit la fonction pour charger les styles globaux dans les fen√™tres XAML
    des modules ToolBox.

.NOTES
    Auteur: PowerShell Admin ToolBox Team
    Version: 1.0
    Cr√©ation: 30 Juillet 2025
#>

function Import-ToolBoxGlobalStyles {
    <#
    .SYNOPSIS
        Charge les styles globaux ToolBox pour l'application
    
    .DESCRIPTION
        Charge le fichier GlobalStyles.xaml dans les ressources globales de l'application
        pour permettre l'utilisation des styles standardis√©s via DynamicResource.
        
        Cette fonction charge les styles de fa√ßon globale, permettant leur utilisation
        dans toutes les fen√™tres de l'application.
    
    .PARAMETER Window
        La fen√™tre XAML dans laquelle charger les styles (optionnel, pour compatibilit√©)
    
    .EXAMPLE
        Import-ToolBoxGlobalStyles
        
    .EXAMPLE
        # Dans une fonction Show-ModuleName
        Import-ToolBoxGlobalStyles
        $window = [Windows.Markup.XamlReader]::Load($reader)
    #>
    
    [CmdletBinding()]
    param(
        [Parameter(Mandatory = $false)]
        [System.Windows.Window]$Window
    )
    
    try {
        # D√©termination du chemin vers GlobalStyles.xaml via les variables globales
        if ($Global:ToolBoxStylesPath) {
            $globalStylesPath = Join-Path $Global:ToolBoxStylesPath "GlobalStyles.xaml"
        } else {
            # Fallback si variables globales pas initialis√©es
            $scriptRoot = $PSScriptRoot
            if (-not $scriptRoot) {
                $scriptRoot = Split-Path -Parent $MyInvocation.MyCommand.Path
            }
            $rootPath = Split-Path -Parent (Split-Path -Parent $scriptRoot)
            $globalStylesPath = Join-Path $rootPath "Styles\GlobalStyles.xaml"
        }
        
        # V√©rification de l'existence du fichier
        if (-not (Test-Path $globalStylesPath)) {
            $errorMsg = "Fichier GlobalStyles.xaml introuvable : $globalStylesPath"
            Write-Error $errorMsg
            
            if (Get-Command Write-ToolBoxLog -ErrorAction SilentlyContinue) {
                Write-ToolBoxLog -Level "Error" -Message $errorMsg -Component "StyleLoader" -File $true
            }
            return $false
        }
        
        # Chargement global des styles (comme dans votre m√©thode pr√©c√©dente)
        Write-Verbose "Chargement global des styles depuis : $globalStylesPath"
        
        # V√©rification si les styles sont d√©j√† charg√©s globalement
        if (-not $Global:ToolBoxStylesXAML) {
            [xml]$Global:ToolBoxStylesXAML = Get-Content $globalStylesPath -Raw -Encoding UTF8
            
            if (-not $Global:ToolBoxStylesXAML) {
                throw "Impossible de charger le fichier GlobalStyles.xaml"
            }
            
            Write-Verbose "Styles ToolBox charg√©s globalement pour la premi√®re fois"
        } else {
            Write-Verbose "Styles ToolBox d√©j√† charg√©s globalement, r√©utilisation"
        }
        
        # Cr√©ation du ResourceDictionary depuis le XML
        $stylesReader = New-Object System.Xml.XmlNodeReader $Global:ToolBoxStylesXAML
        $resourceDictionary = [Windows.Markup.XamlReader]::Load($stylesReader)
        
        if (-not $resourceDictionary) {
            throw "Impossible de cr√©er le ResourceDictionary depuis GlobalStyles.xaml"
        }
        
        # Ajout au niveau application pour disponibilit√© globale
        if (-not [System.Windows.Application]::Current) {
            # Si pas d'application WPF, on cr√©e une instance minimale
            $app = New-Object System.Windows.Application
        }
        
        $app = [System.Windows.Application]::Current
        if (-not $app.Resources) {
            $app.Resources = New-Object System.Windows.ResourceDictionary
        }
        
        if (-not $app.Resources.MergedDictionaries) {
            $app.Resources.MergedDictionaries = New-Object System.Collections.ObjectModel.Collection[System.Windows.ResourceDictionary]
        }
        
        # V√©rification si d√©j√† ajout√© pour √©viter les doublons
        $alreadyLoaded = $false
        foreach ($dict in $app.Resources.MergedDictionaries) {
            if ($dict.Source -and $dict.Source.ToString().Contains("GlobalStyles")) {
                $alreadyLoaded = $true
                break
            }
        }
        
        if (-not $alreadyLoaded) {
            $app.Resources.MergedDictionaries.Add($resourceDictionary)
            Write-Verbose "ResourceDictionary ajout√© aux ressources de l'application"
        }
        
        # Si une fen√™tre est fournie, s'assurer qu'elle peut acc√©der aux ressources
        if ($Window) {
            if (-not $Window.Resources) {
                $Window.Resources = New-Object System.Windows.ResourceDictionary
            }
            # La fen√™tre h√©rite automatiquement des ressources de l'application
        }
        
        # Logging du succ√®s
        $successMsg = "Styles ToolBox charg√©s avec succ√®s au niveau application"
        Write-Verbose $successMsg
        
        if (Get-Command Write-ToolBoxLog -ErrorAction SilentlyContinue) {
            Write-ToolBoxLog -Level "Debug" -Message $successMsg -Component "StyleLoader"
        }
        
        return $true
    }
    catch {
        $errorMsg = "Erreur lors du chargement global des styles : $($_.Exception.Message)"
        Write-Error $errorMsg
        
        if (Get-Command Write-ToolBoxLog -ErrorAction SilentlyContinue) {
            Write-ToolBoxLog -Level "Error" -Message $errorMsg -Component "StyleLoader" -File $true
        }
        
        return $false
    }
}

function Test-ToolBoxStylesLoading {
    <#
    .SYNOPSIS
        Teste le chargement des styles globaux
    
    .DESCRIPTION
        Fonction de test pour valider que les styles globaux se chargent correctement.
    #>
    
    [CmdletBinding()]
    param()
    
    try {
        Write-Host "üé® Test du chargement des styles globaux..." -ForegroundColor Cyan
        
        # Cr√©ation d'une fen√™tre de test simple
        Add-Type -AssemblyName PresentationFramework
        Add-Type -AssemblyName PresentationCore
        Add-Type -AssemblyName WindowsBase
        
        $testWindow = New-Object System.Windows.Window
        $testWindow.Title = "Test Styles"
        $testWindow.Width = 300
        $testWindow.Height = 200
        
        # Test du chargement
        $result = Import-ToolBoxGlobalStyles -Window $testWindow
        
        if ($result) {
            Write-Host "‚úÖ Styles charg√©s avec succ√®s" -ForegroundColor Green
            Write-Host "   Ressources merg√©es : $($testWindow.Resources.MergedDictionaries.Count)" -ForegroundColor White
        } else {
            Write-Host "‚ùå √âchec du chargement des styles" -ForegroundColor Red
        }
        
        # Nettoyage
        $testWindow.Close()
        
        return $result
    }
    catch {
        Write-Host "‚ùå Erreur lors du test : $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# Les fonctions sont disponibles apr√®s dot-sourcing du script