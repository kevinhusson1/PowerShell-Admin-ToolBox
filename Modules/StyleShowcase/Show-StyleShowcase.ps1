function Show-StyleShowcase {
    <#
    .SYNOPSIS
        Affiche la vitrine des styles ToolBox V1
    
    .DESCRIPTION
        Module de r√©f√©rence qui pr√©sente tous les styles, couleurs, contr√¥les
        et layouts disponibles dans le syst√®me de design ToolBox V1.
        
        Cette vitrine sert de :
        - R√©f√©rence visuelle pour les d√©veloppeurs
        - Guide de style pour l'√©quipe
        - Test des styles en temps r√©el
        - Documentation interactive
        
        VERSION 1 : Design moderne, minimaliste et fonctionnel
        Compatible .NET 9.0 / PowerShell 7.5+
    
    .EXAMPLE
        Show-StyleShowcase
    #>
    
    [CmdletBinding()]
    param()
    
    try {
        # √âTAPE 1 : Initialisation universelle de l'environnement ToolBox
        if (-not $Global:ToolBoxEnvironmentInitialized) {
            # Import du module Core si pas d√©j√† fait
            $coreModulePath = Join-Path (Split-Path -Parent (Split-Path -Parent $PSScriptRoot)) "Core"
            if (Test-Path (Join-Path $coreModulePath "ToolBox.Core.psd1")) {
                Import-Module (Join-Path $coreModulePath "ToolBox.Core.psd1") -Force -Verbose:$false
            } else {
                throw "Module ToolBox.Core introuvable dans : $coreModulePath"
            }
            
            # Initialisation compl√®te de l'environnement
            $initResult = Initialize-ToolBoxEnvironment -ShowDetails
            if (-not $initResult) {
                throw "√âchec de l'initialisation de l'environnement ToolBox"
            }
        }
        
        Write-ToolBoxLog -Level "Info" -Message "D√©marrage du module StyleShowcase V1 (Design Moderne)" -Component "StyleShowcase"
        
        # √âTAPE 2 : Charger le XAML
        $xamlPath = Join-Path $PSScriptRoot "StyleShowcase.xaml"
        if (-not (Test-Path $xamlPath)) {
            throw "Fichier XAML introuvable : $xamlPath"
        }
        
        [xml]$xaml = Get-Content $xamlPath -Raw -Encoding UTF8
        $reader = New-Object System.Xml.XmlNodeReader $xaml
        $window = [Windows.Markup.XamlReader]::Load($reader)
        
        if (-not $window) { 
            throw "Impossible de charger la fen√™tre XAML" 
        }
        
        # √âTAPE 3 : Injection des styles personnalis√©s ToolBox
        $stylesResult = Import-ToolBoxGlobalStyles -Window $window
        if (-not $stylesResult) {
            Write-Warning "Impossible de charger les styles personnalis√©s, utilisation des styles par d√©faut"
        }
        
        # √âTAPE 4 : R√©cup√©ration des contr√¥les nomm√©s
        $closeButton = $window.FindName("CloseButton")
        $copyXamlButton = $window.FindName("CopyXamlButton")
        $documentationButton = $window.FindName("DocumentationButton")
        $focusTextBox = $window.FindName("FocusTextBox")
        
        # √âTAPE 5 : Configuration des √©v√©nements
        
        # Bouton Fermer
        if ($closeButton) {
            $closeButton.Add_Click({
                Write-ToolBoxLog -Level "Info" -Message "Fermeture de la vitrine de styles V1" -Component "StyleShowcase" -UI $true
                $window.Close()
            })
        }
        
        # Bouton Copier XAML
        if ($copyXamlButton) {
            $copyXamlButton.Add_Click({
                try {
                    # Exemple XAML moderne avec les nouveaux styles
                    $exampleXaml = @"
<!-- Exemple d'interface ToolBox V1 avec styles modernes -->
<Window x:Class="MonModule.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Style="{StaticResource ToolBoxWindow}"
        Title="Mon Module ToolBox" Height="600" Width="800">
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- En-t√™te -->
        <Border Grid.Row="0" Style="{StaticResource ToolBoxCard}">
            <StackPanel>
                <TextBlock Text="Mon Interface Moderne" Style="{StaticResource ToolBoxHeaderText}"/>
                <TextBlock Text="Utilise le design system ToolBox V1" Style="{StaticResource ToolBoxSecondaryText}"/>
            </StackPanel>
        </Border>
        
        <!-- Contenu principal -->
        <ScrollViewer Grid.Row="1">
            <StackPanel Margin="{StaticResource LargeMargin}">
                
                <!-- Section Formulaire -->
                <GroupBox Header="Formulaire d'exemple" Style="{StaticResource ToolBoxSection}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        
                        <Label Grid.Row="0" Grid.Column="0" Content="Nom :" Style="{StaticResource ToolBoxFormLabel}"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource ToolBoxTextBox}" Margin="0,0,0,8"/>
                        
                        <Label Grid.Row="1" Grid.Column="0" Content="Email :" Style="{StaticResource ToolBoxFormLabel}"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource ToolBoxTextBox}" Margin="0,0,0,8"/>
                        
                        <Label Grid.Row="2" Grid.Column="0" Content="Type :" Style="{StaticResource ToolBoxFormLabel}"/>
                        <ComboBox Grid.Row="2" Grid.Column="1" Style="{StaticResource ToolBoxComboBox}">
                            <ComboBoxItem Content="Option 1"/>
                            <ComboBoxItem Content="Option 2"/>
                        </ComboBox>
                    </Grid>
                </GroupBox>
                
                <!-- Section Options -->
                <Border Style="{StaticResource ToolBoxCard}">
                    <StackPanel>
                        <TextBlock Text="Options" Style="{StaticResource ToolBoxSubHeaderText}"/>
                        <CheckBox Content="Notification par email" Style="{StaticResource ToolBoxCheckBox}"/>
                        <CheckBox Content="Synchronisation automatique" Style="{StaticResource ToolBoxCheckBox}"/>
                    </StackPanel>
                </Border>
                
            </StackPanel>
        </ScrollViewer>
        
        <!-- Actions -->
        <Border Grid.Row="2" Style="{StaticResource ToolBoxCard}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="Annuler" Style="{StaticResource ToolBoxSecondaryButton}" Margin="0,0,8,0"/>
                <Button Content="Valider" Style="{StaticResource ToolBoxPrimaryButton}"/>
            </StackPanel>
        </Border>
        
    </Grid>
</Window>
"@
                    [System.Windows.Clipboard]::SetText($exampleXaml)
                    
                    # Notification
                    [System.Windows.MessageBox]::Show(
                        "Exemple de XAML moderne copi√© dans le presse-papiers !`n`nUtilise les nouveaux styles ToolBox V1 :`n- ToolBoxWindow, ToolBoxCard, ToolBoxSection`n- ToolBoxPrimaryButton, ToolBoxTextBox`n- Et tous les styles de la palette moderne",
                        "ToolBox - Vitrine de Styles V1",
                        [System.Windows.MessageBoxButton]::OK,
                        [System.Windows.MessageBoxImage]::Information
                    )
                    
                    Write-ToolBoxLog -Level "Info" -Message "Exemple XAML V1 copi√© dans le presse-papiers" -Component "StyleShowcase" -UI $true
                }
                catch {
                    [System.Windows.MessageBox]::Show(
                        "Erreur lors de la copie : $($_.Exception.Message)",
                        "Erreur",
                        [System.Windows.MessageBoxButton]::OK,
                        [System.Windows.MessageBoxImage]::Error
                    )
                }
            })
        }
        
        # Bouton Documentation
        if ($documentationButton) {
            $documentationButton.Add_Click({
                try {
                    # Ouverture de la documentation (adapter l'URL selon vos besoins)
                    $githubUrl = "https://github.com/votre-repo/PowerShell-Admin-ToolBox/wiki/Style-Guide-V1"
                    Start-Process $githubUrl
                    
                    Write-ToolBoxLog -Level "Info" -Message "Ouverture de la documentation des styles V1" -Component "StyleShowcase" -UI $true
                }
                catch {
                    [System.Windows.MessageBox]::Show(
                        "Impossible d'ouvrir la documentation : $($_.Exception.Message)`n`nVeuillez consulter le fichier README.md ou la documentation dans le d√©p√¥t GitHub.",
                        "Information",
                        [System.Windows.MessageBoxButton]::OK,
                        [System.Windows.MessageBoxImage]::Information
                    )
                }
            })
        }
        
        # Focus automatique sur le TextBox d'exemple
        if ($focusTextBox) {
            $window.Add_Loaded({
                $focusTextBox.Focus()
            })
        }
        
        # √âTAPE 6 : Affichage d'informations sur la console
        Write-Host "`nüé® === VITRINE DE STYLES TOOLBOX V1 ===" -ForegroundColor Cyan
        Write-Host "üöÄ Interface charg√©e avec succ√®s" -ForegroundColor Green
        Write-Host "üìä Fonctionnalit√©s disponibles :" -ForegroundColor Yellow
        Write-Host "   ‚Ä¢ Palette de couleurs moderne et coh√©rente" -ForegroundColor White
        Write-Host "   ‚Ä¢ Styles de typographie hi√©rarchis√©s" -ForegroundColor White
        Write-Host "   ‚Ä¢ Boutons avec √©tats interactifs (hover, pressed, disabled)" -ForegroundColor White
        Write-Host "   ‚Ä¢ Champs de saisie uniformis√©s avec focus" -ForegroundColor White
        Write-Host "   ‚Ä¢ Conteneurs et layouts structur√©s" -ForegroundColor White
        Write-Host "   ‚Ä¢ Guide d'utilisation complet" -ForegroundColor White
        Write-Host "   ‚Ä¢ Exemples XAML pr√™ts √† copier" -ForegroundColor White
        Write-Host "üìù Design : Moderne, minimaliste et fonctionnel" -ForegroundColor Magenta
        Write-Host "‚ö° Compatible : .NET 9.0 / PowerShell 7.5+" -ForegroundColor Magenta
        
        # √âTAPE 7 : Gestion de la fermeture propre
        $window.Add_Closed({
            Write-ToolBoxLog -Level "Info" -Message "Vitrine de styles V1 ferm√©e" -Component "StyleShowcase" -File $true -UI $true
            Write-Host "üé® Vitrine de styles ferm√©e - Merci d'avoir test√© !" -ForegroundColor Magenta
        })
        
        # √âTAPE 8 : Affichage de la fen√™tre
        Write-Host "üåü Ouverture de la vitrine des styles V1..." -ForegroundColor Green
        $window.ShowDialog() | Out-Null
        
    }
    catch {
        $errorMsg = "Erreur lors de l'affichage de la vitrine de styles V1 : $($_.Exception.Message)"
        Write-Error $errorMsg
        
        Write-ToolBoxLog -Level "Error" -Message $errorMsg -Component "StyleShowcase" -File $true
        
        # Affichage d'informations de d√©pannage
        Write-Host "`nüîß INFORMATIONS DE D√âPANNAGE :" -ForegroundColor Red
        Write-Host "   ‚Ä¢ V√©rifiez que .NET 9.0 est install√©" -ForegroundColor Yellow
        Write-Host "   ‚Ä¢ V√©rifiez que PowerShell 7.5+ est utilis√©" -ForegroundColor Yellow
        Write-Host "   ‚Ä¢ Le fichier XAML doit √™tre pr√©sent : $xamlPath" -ForegroundColor Yellow
        Write-Host "   ‚Ä¢ Les styles GlobalStyles.xaml doivent √™tre accessibles" -ForegroundColor Yellow
        Write-Host "   ‚Ä¢ Le module ToolBox.Core doit √™tre charg√©" -ForegroundColor Yellow
        
        # Informations de versions
        Write-Host "`nüìã INFORMATIONS SYST√àME :" -ForegroundColor Cyan
        Write-Host "   ‚Ä¢ PowerShell : $($PSVersionTable.PSVersion)" -ForegroundColor White
        Write-Host "   ‚Ä¢ OS : $($PSVersionTable.OS)" -ForegroundColor White
        Write-Host "   ‚Ä¢ Edition : $($PSVersionTable.PSEdition)" -ForegroundColor White
        Write-Host "   ‚Ä¢ .NET Version : $([System.Environment]::Version)" -ForegroundColor White
        
        # Instructions de r√©solution
        Write-Host "`nüí° SOLUTIONS SUGG√âR√âES :" -ForegroundColor Green
        Write-Host "   1. Red√©marrez PowerShell en tant qu'administrateur" -ForegroundColor White
        Write-Host "   2. V√©rifiez l'ExecutionPolicy : Set-ExecutionPolicy RemoteSigned" -ForegroundColor White
        Write-Host "   3. Rechargez le module Core : Import-Module .\Core\ToolBox.Core.psd1 -Force" -ForegroundColor White
        Write-Host "   4. Testez l'initialisation : Initialize-ToolBoxEnvironment -ShowDetails" -ForegroundColor White
    }
}

# Auto-ex√©cution pour test autonome
Show-StyleShowcase