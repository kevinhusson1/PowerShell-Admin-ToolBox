function Show-UserManagement {
    <#
    .SYNOPSIS
        Interface de gestion des utilisateurs AD/Azure AD
    
    .DESCRIPTION
        Module de test pour la gestion des utilisateurs.
        Ce module est d√©sactiv√© par d√©faut dans le manifest.
    
    .EXAMPLE
        Show-UserManagement
    #>
    
    [CmdletBinding()]
    param()
    
    try {
        # Logging du d√©marrage
        if (Get-Command Write-ToolBoxLog -ErrorAction SilentlyContinue) {
            Write-ToolBoxLog -Level "Info" -Message "Tentative de d√©marrage du module UserManagement" -Component "UserManagement" -File $true
            Write-ToolBoxLog -Level "Private" -Message "Module UserManagement appel√© par $($env:USERNAME)" -Component "UserManagement" -File $true
        }
        
        Write-Host "üë§ MODULE USERMANAGEMENT - TEST" -ForegroundColor Cyan
        Write-Host "==================================" -ForegroundColor Cyan
        
        Write-Host "`n‚ö†Ô∏è  ATTENTION : Ce module est en d√©veloppement" -ForegroundColor Yellow
        Write-Host "Fonctionnalit√©s √† venir :" -ForegroundColor White
        Write-Host "   ‚Ä¢ Cr√©ation d'utilisateurs AD/Azure" -ForegroundColor Gray
        Write-Host "   ‚Ä¢ D√©sactivation de comptes" -ForegroundColor Gray
        Write-Host "   ‚Ä¢ R√©activation de comptes" -ForegroundColor Gray
        Write-Host "   ‚Ä¢ Synchronisation AD <-> Azure" -ForegroundColor Gray
        
        # Test logging avec niveau Private
        if (Get-Command Write-ToolBoxLog -ErrorAction SilentlyContinue) {
            Write-ToolBoxLog -Level "Warning" -Message "Module UserManagement ex√©cut√© en mode test" -Component "UserManagement" -File $true -UI $true
            Write-ToolBoxLog -Level "Private" -Message "Acc√®s au module UserManagement autoris√© pour $($env:USERNAME)" -Component "UserManagement" -File $true
        }
        
        Write-Host "`nüöß Module UserManagement en construction..." -ForegroundColor Yellow
        Write-Host "==================================`n" -ForegroundColor Cyan
    }
    catch {
        $errorMsg = "Erreur dans le module UserManagement : $($_.Exception.Message)"
        Write-Error $errorMsg
        
        if (Get-Command Write-ToolBoxLog -ErrorAction SilentlyContinue) {
            Write-ToolBoxLog -Level "Error" -Message $errorMsg -Component "UserManagement" -File $true
        }
    }
}